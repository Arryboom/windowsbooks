// Контекст устройства
typedef struct _DEVICE_CONTEXT
    {
    PDRIVER_OBJECT pDriverObject;
    PDEVICE_OBJECT pDeviceObject;
    }
    DEVICE_CONTEXT, *PDEVICE_CONTEXT, **PPDEVICE_CONTEXT;

#define DEVICE_CONTEXT_ sizeof (DEVICE_CONTEXT)


// Структуры для работы ...
typedef UCHAR               BYTE,  *PBYTE,  **PPBYTE;
typedef USHORT              WORD,  *PWORD,  **PPWORD;
typedef ULONG               DWORD, *PDWORD, **PPDWORD;
typedef int                 BOOL,  *PBOOL,  **PPBOOL;
typedef NTSTATUS (NTAPI *NTPROC) ();
typedef NTPROC *PNTPROC;

// Структуры для работы с SDT (с прагмой pack(1) !)
#pragma pack(1)
typedef struct _SYSTEM_SERVICE_TABLE
        {
		PNTPROC ServiceTable;           // array of entry points
		PDWORD  CounterTable;           // array of usage counters
		DWORD   ServiceLimit;           // number of table entries
		PBYTE   ArgumentTable;          // array of byte counts
		}
        SYSTEM_SERVICE_TABLE, * PSYSTEM_SERVICE_TABLE, **PPSYSTEM_SERVICE_TABLE;

#define SYSTEM_SERVICE_TABLE_ sizeof (SYSTEM_SERVICE_TABLE)

// -----------------------------------------------------------------


typedef struct _SERVICE_DESCRIPTOR_TABLE
        {
		SYSTEM_SERVICE_TABLE ntoskrnl;  // ntoskrnl.exe (native api)
		SYSTEM_SERVICE_TABLE win32k;    // win32k.sys   (gdi/user)
		SYSTEM_SERVICE_TABLE Table3;    // not used
		SYSTEM_SERVICE_TABLE Table4;    // not used
		} SERVICE_DESCRIPTOR_TABLE, *PSERVICE_DESCRIPTOR_TABLE, **PPSERVICE_DESCRIPTOR_TABLE;

#define SERVICE_DESCRIPTOR_TABLE_ sizeof (SERVICE_DESCRIPTOR_TABLE)
#pragma pack()

typedef NTSTATUS (NTAPI *NTPROC) ();
typedef NTPROC *PNTPROC;
