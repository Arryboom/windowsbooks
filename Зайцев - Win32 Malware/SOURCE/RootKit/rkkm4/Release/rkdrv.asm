; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\rkdrv.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0CJ@FAOOEFF@Load?5Image?4?5PID?5?$DN?5?$CFd?0?5Image?5Name@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DB@FEAOMEKN@Create?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DB@CDIJHGMC@Delete?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DA@FMKFPKEO@Create?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DA@NMCHADEP@Delete?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MyLoadImageNotifyRoutine@@YGXPAU_UNICODE_STRING@@PAXPAU_IMAGE_INFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MyCreateProcessNotifyRoutine@@YGXPAX0E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MyCreateThreadNotifyRoutine@@YGXPAX0E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?MyLoadImageNotifyRoutine@@YGXPAU_UNICODE_STRING@@PAXPAU_IMAGE_INFO@@@Z ; MyLoadImageNotifyRoutine
PUBLIC	??_C@_0CJ@FAOOEFF@Load?5Image?4?5PID?5?$DN?5?$CFd?0?5Image?5Name@ ; `string'
EXTRN	_DbgPrint:NEAR
;	COMDAT ??_C@_0CJ@FAOOEFF@Load?5Image?4?5PID?5?$DN?5?$CFd?0?5Image?5Name@
; File e:\delphi5\delphi7\projects\bhv\rkkm4\rkdrv.cpp
CONST	SEGMENT
??_C@_0CJ@FAOOEFF@Load?5Image?4?5PID?5?$DN?5?$CFd?0?5Image?5Name@ DB 'Loa'
	DB	'd Image. PID = %d, Image Name = %ws ', 0aH, 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?MyLoadImageNotifyRoutine@@YGXPAU_UNICODE_STRING@@PAXPAU_IMAGE_INFO@@@Z
_TEXT	SEGMENT
_FullImageName$ = 8					; size = 4
_ProcessId$ = 12					; size = 4
_ImageInfo$ = 16					; size = 4
?MyLoadImageNotifyRoutine@@YGXPAU_UNICODE_STRING@@PAXPAU_IMAGE_INFO@@@Z PROC NEAR ; MyLoadImageNotifyRoutine, COMDAT

; 14   :  	DbgPrint("Load Image. PID = %d, Image Name = %ws \n", ProcessId, FullImageName->Buffer);  

	mov	eax, DWORD PTR _FullImageName$[esp-4]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _ProcessId$[esp-4]
	push	ecx
	push	edx
	push	OFFSET FLAT:??_C@_0CJ@FAOOEFF@Load?5Image?4?5PID?5?$DN?5?$CFd?0?5Image?5Name@
	call	_DbgPrint
	add	esp, 12					; 0000000cH

; 15   : }

	ret	12					; 0000000cH
?MyLoadImageNotifyRoutine@@YGXPAU_UNICODE_STRING@@PAXPAU_IMAGE_INFO@@@Z ENDP ; MyLoadImageNotifyRoutine
_TEXT	ENDS
PUBLIC	?MyCreateProcessNotifyRoutine@@YGXPAX0E@Z	; MyCreateProcessNotifyRoutine
PUBLIC	??_C@_0DB@FEAOMEKN@Create?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@ ; `string'
PUBLIC	??_C@_0DB@CDIJHGMC@Delete?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@ ; `string'
;	COMDAT ??_C@_0DB@FEAOMEKN@Create?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT
??_C@_0DB@FEAOMEKN@Create?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@ DB 'Cr'
	DB	'eate process.  ParentId = %d, ProcessId = %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CDIJHGMC@Delete?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT
??_C@_0DB@CDIJHGMC@Delete?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@ DB 'De'
	DB	'lete process.  ParentId = %d, ProcessId = %d ', 0aH, 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?MyCreateProcessNotifyRoutine@@YGXPAX0E@Z
_TEXT	SEGMENT
_ParentId$ = 8						; size = 4
_ProcessId$ = 12					; size = 4
_Create$ = 16						; size = 1
?MyCreateProcessNotifyRoutine@@YGXPAX0E@Z PROC NEAR	; MyCreateProcessNotifyRoutine, COMDAT

; 22   :     if (Create) 

	mov	al, BYTE PTR _Create$[esp-4]
	test	al, al
	je	SHORT $L9926

; 23   : 		DbgPrint("Create process.  ParentId = %d, ProcessId = %d \n", ParentId, ProcessId);

	mov	eax, DWORD PTR _ProcessId$[esp-4]
	mov	ecx, DWORD PTR _ParentId$[esp-4]
	push	eax
	push	ecx
	push	OFFSET FLAT:??_C@_0DB@FEAOMEKN@Create?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@

; 24   : 	else 
; 25   : 		DbgPrint("Delete process.  ParentId = %d, ProcessId = %d \n", ParentId, ProcessId);

	call	_DbgPrint
	add	esp, 12					; 0000000cH

; 26   : }

	ret	12					; 0000000cH
$L9926:

; 24   : 	else 
; 25   : 		DbgPrint("Delete process.  ParentId = %d, ProcessId = %d \n", ParentId, ProcessId);

	mov	edx, DWORD PTR _ProcessId$[esp-4]
	mov	eax, DWORD PTR _ParentId$[esp-4]
	push	edx
	push	eax
	push	OFFSET FLAT:??_C@_0DB@CDIJHGMC@Delete?5process?4?5?5ParentId?5?$DN?5?$CFd?0?5@
	call	_DbgPrint
	add	esp, 12					; 0000000cH

; 26   : }

	ret	12					; 0000000cH
?MyCreateProcessNotifyRoutine@@YGXPAX0E@Z ENDP		; MyCreateProcessNotifyRoutine
_TEXT	ENDS
PUBLIC	?MyCreateThreadNotifyRoutine@@YGXPAX0E@Z	; MyCreateThreadNotifyRoutine
PUBLIC	??_C@_0DA@FMKFPKEO@Create?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@ ; `string'
PUBLIC	??_C@_0DA@NMCHADEP@Delete?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@ ; `string'
;	COMDAT ??_C@_0DA@FMKFPKEO@Create?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT
??_C@_0DA@FMKFPKEO@Create?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@ DB 'Cr'
	DB	'eate thread.  ProcessId = %d, ThreadId = %d ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NMCHADEP@Delete?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@
CONST	SEGMENT
??_C@_0DA@NMCHADEP@Delete?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@ DB 'De'
	DB	'lete thread.  ProcessId = %d, ThreadId = %d ', 0aH, 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?MyCreateThreadNotifyRoutine@@YGXPAX0E@Z
_TEXT	SEGMENT
_ProcessId$ = 8						; size = 4
_ThreadId$ = 12						; size = 4
_Create$ = 16						; size = 1
?MyCreateThreadNotifyRoutine@@YGXPAX0E@Z PROC NEAR	; MyCreateThreadNotifyRoutine, COMDAT

; 33   :     if (Create) 

	mov	al, BYTE PTR _Create$[esp-4]
	test	al, al
	je	SHORT $L9935

; 34   : 		DbgPrint("Create thread.  ProcessId = %d, ThreadId = %d \n", ProcessId, ThreadId);

	mov	eax, DWORD PTR _ThreadId$[esp-4]
	mov	ecx, DWORD PTR _ProcessId$[esp-4]
	push	eax
	push	ecx
	push	OFFSET FLAT:??_C@_0DA@FMKFPKEO@Create?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@

; 35   : 	else 
; 36   : 		DbgPrint("Delete thread.  ProcessId = %d, ThreadId = %d \n", ProcessId, ThreadId);

	call	_DbgPrint
	add	esp, 12					; 0000000cH

; 37   : }

	ret	12					; 0000000cH
$L9935:

; 35   : 	else 
; 36   : 		DbgPrint("Delete thread.  ProcessId = %d, ThreadId = %d \n", ProcessId, ThreadId);

	mov	edx, DWORD PTR _ThreadId$[esp-4]
	mov	eax, DWORD PTR _ProcessId$[esp-4]
	push	edx
	push	eax
	push	OFFSET FLAT:??_C@_0DA@NMCHADEP@Delete?5thread?4?5?5ProcessId?5?$DN?5?$CFd?0?5@
	call	_DbgPrint
	add	esp, 12					; 0000000cH

; 37   : }

	ret	12					; 0000000cH
?MyCreateThreadNotifyRoutine@@YGXPAX0E@Z ENDP		; MyCreateThreadNotifyRoutine
_TEXT	ENDS
PUBLIC	?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z ; DriverEntry
EXTRN	_PsSetCreateProcessNotifyRoutine@8:NEAR
EXTRN	_PsSetCreateThreadNotifyRoutine@4:NEAR
EXTRN	_PsSetLoadImageNotifyRoutine@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z
_TEXT	SEGMENT
_pDriverObject$ = 8					; size = 4
_pusRegistryPath$ = 12					; size = 4
?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z PROC NEAR ; DriverEntry, COMDAT

; 41   : {

	push	esi

; 42   :     // Устновка функций мониторинга
; 43   : 	NTSTATUS Res1 = PsSetLoadImageNotifyRoutine(*MyLoadImageNotifyRoutine);

	push	OFFSET FLAT:?MyLoadImageNotifyRoutine@@YGXPAU_UNICODE_STRING@@PAXPAU_IMAGE_INFO@@@Z ; MyLoadImageNotifyRoutine
	call	_PsSetLoadImageNotifyRoutine@4

; 44   : 	NTSTATUS Res2 = PsSetCreateProcessNotifyRoutine(*MyCreateProcessNotifyRoutine, true); 

	push	1
	push	OFFSET FLAT:?MyCreateProcessNotifyRoutine@@YGXPAX0E@Z ; MyCreateProcessNotifyRoutine
	call	_PsSetCreateProcessNotifyRoutine@8

; 45   : 	NTSTATUS Res3 = PsSetCreateThreadNotifyRoutine(*MyCreateThreadNotifyRoutine); 

	push	OFFSET FLAT:?MyCreateThreadNotifyRoutine@@YGXPAX0E@Z ; MyCreateThreadNotifyRoutine
	mov	esi, eax
	call	_PsSetCreateThreadNotifyRoutine@4

; 46   : 	// Возврат результата инициализации. 
; 47   : 	if ((Res3 == STATUS_SUCCESS) || (Res2 == STATUS_SUCCESS) || (Res3 == STATUS_SUCCESS))

	test	eax, eax
	je	SHORT $L9950
	test	esi, esi
	je	SHORT $L9950

; 51   : 	else
; 52   : 	 return STATUS_UNSUCCESSFUL;

	mov	eax, -1073741823			; c0000001H
	pop	esi

; 53   : }

	ret	8
$L9950:

; 48   : 	 // Если хотя-бы одна функция отработала успешно, то драйвер
; 49   : 	 // должен остаться в памяти
; 50   : 	 return STATUS_SUCCESS; 

	xor	eax, eax
	pop	esi

; 53   : }

	ret	8
?DriverEntry@@YGJPAU_DRIVER_OBJECT@@PAU_UNICODE_STRING@@@Z ENDP ; DriverEntry
_TEXT	ENDS
END
