#include <stdafx.h>
#include <winsock2.h>
#include <mstcpip.h>

// Буфер для приёма данных
#define MAX_PACKET_SIZE  65535
static BYTE Buffer[MAX_PACKET_SIZE]; 

int _tmain(int argc, _TCHAR* argv[])
{
  WSADATA     wsadata;    // Инициализация WinSock.
  SOCKET      RawSocket;  // Cлущающий сокет.
  unsigned long       flag = 1;  // Флаг PROMISC Вкл/выкл.

  // Инициализация WS2_32
  WSAStartup(MAKEWORD(2,2), &wsadata);
  // Создание RAW-сокета
  RawSocket = socket( AF_INET, SOCK_RAW, IPPROTO_IP );
 
  // Определение имени хоста
  char        HostName[256]; 
  gethostname(HostName, sizeof(HostName));
  printf("HostName = %s \n", HostName);

  // Определение информации по имени хоста
  PHOSTENT   pLocalHostEnt;      
  pLocalHostEnt = gethostbyname(HostName);

  // Подготовка структуры SockAddr с адресом хоста
  SOCKADDR_IN SockAddr;        
  ZeroMemory(&SockAddr, sizeof(SockAddr));
  SockAddr.sin_family = AF_INET;
  SockAddr.sin_addr.s_addr = ((in_addr *)pLocalHostEnt->h_addr_list[0])->s_addr;
  // Привязка
  bind(RawSocket, (SOCKADDR *)&SockAddr, sizeof(SOCKADDR));

  // Переключение сетевой карты в "promiscuous mode" для захвата всех пакетов
  ioctlsocket(RawSocket, SIO_RCVALL, &flag);

  // Приём IP-пакетов.
  while( true )
  {

    int count;

    count = recv( RawSocket, (char *)Buffer, sizeof(Buffer), 0 );
	printf("Len = %d \n", count);

    // --- код для обработки и записи захваченного IP-пакета ---
  }

  closesocket(RawSocket);
  WSACleanup();
}
