// (С) Зайцев Олег, 2005
#include "StdAfx.h"
#include <ntddk.h>
#include <ntdef.h>
#include <rkdrv.h>

extern "C" 	{
	extern  PWORD NtBuildNumber; // Номер сборки NT
}

// Загрузка образа исполняемого файла или DLL
VOID MyLoadImageNotifyRoutine(IN PUNICODE_STRING  FullImageName,
    IN HANDLE  ProcessId, 
    IN PIMAGE_INFO  ImageInfo)
{
  DbgPrint("Load Image. PID = %d, Image Name = %ws \n", ProcessId, FullImageName->Buffer);  
}

// Создание/завершение процессов
VOID MyCreateProcessNotifyRoutine(IN HANDLE  ParentId,
    IN HANDLE  ProcessId,
    IN BOOLEAN  Create)
{
    if (Create) 
     DbgPrint("Create process.  ParentId = %d, ProcessId = %d \n", ParentId, ProcessId);
    else 
     DbgPrint("Delete process.  ParentId = %d, ProcessId = %d \n", ParentId, ProcessId);
}

// Создание/завершение потоков
VOID MyCreateThreadNotifyRoutine(IN HANDLE  ProcessId,
    IN HANDLE  ThreadId,
    IN BOOLEAN  Create)
{   
	DbgPrint("Build = %d \n", *NtBuildNumber);  
    if (Create) 
		DbgPrint("Create thread.  ProcessId = %d, ThreadId = %d \n", ProcessId, ThreadId);
	else 
		DbgPrint("Delete thread.  ProcessId = %d, ThreadId = %d \n", ProcessId, ThreadId);
}

// ***** Точка входа в драйвер *****
NTSTATUS DriverEntry(IN PDRIVER_OBJECT pDriverObject, IN PUNICODE_STRING pusRegistryPath)
{
    // Устновка функций мониторинга
	NTSTATUS Res1 = PsSetLoadImageNotifyRoutine(*MyLoadImageNotifyRoutine);
	NTSTATUS Res2 = PsSetCreateProcessNotifyRoutine(*MyCreateProcessNotifyRoutine, true); 
	NTSTATUS Res3 = PsSetCreateThreadNotifyRoutine(*MyCreateThreadNotifyRoutine); 
	// Возврат результата инициализации. 
	if ((Res3 == STATUS_SUCCESS) || (Res2 == STATUS_SUCCESS) || (Res3 == STATUS_SUCCESS))
	 // Если хотя-бы одна функция отработала успешно, то драйвер
	 // должен остаться в памяти
	 return STATUS_SUCCESS; 
	else
	 return STATUS_UNSUCCESSFUL;
}